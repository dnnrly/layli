// Code generated by mockery v2.30.1. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// NodeDrawer is an autogenerated mock type for the NodeDrawer type
type NodeDrawer struct {
	mock.Mock
}

// Roundrect provides a mock function with given fields: x, y, w, h, rx, ry, s
func (_m *NodeDrawer) Roundrect(x int, y int, w int, h int, rx int, ry int, s ...string) {
	_va := make([]interface{}, len(s))
	for _i := range s {
		_va[_i] = s[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, x, y, w, h, rx, ry)
	_ca = append(_ca, _va...)
	_m.Called(_ca...)
}

// TextEnd provides a mock function with given fields:
func (_m *NodeDrawer) TextEnd() {
	_m.Called()
}

// Textspan provides a mock function with given fields: x, y, t, s
func (_m *NodeDrawer) Textspan(x int, y int, t string, s ...string) {
	_va := make([]interface{}, len(s))
	for _i := range s {
		_va[_i] = s[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, x, y, t)
	_ca = append(_ca, _va...)
	_m.Called(_ca...)
}

// NewNodeDrawer creates a new instance of NodeDrawer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewNodeDrawer(t interface {
	mock.TestingT
	Cleanup(func())
}) *NodeDrawer {
	mock := &NodeDrawer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
